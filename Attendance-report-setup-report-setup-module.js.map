{"version":3,"sources":["webpack:///./node_modules/ng2-ui-switch/dist/index.js","webpack:///./node_modules/ng2-ui-switch/dist/ui-switch.component.js","webpack:///./node_modules/ng2-ui-switch/dist/ui-switch.module.js","webpack:///./src/app/Attendance/report-setup/report-setup.component.html","webpack:///./src/app/Attendance/report-setup/report-setup.component.scss","webpack:///./src/app/Attendance/report-setup/report-setup.component.ts","webpack:///./src/app/Attendance/report-setup/report-setup.module.ts","webpack:///./src/app/Attendance/report-setup/report-setup.routing.module.ts","webpack:///./src/app/service/classsection.service.ts","webpack:///./src/app/service/modal.service.ts","webpack:///./src/app/service/report-setup.service.ts","webpack:///./src/app/shared/Models/report-setup.ts","webpack:///./src/app/shared/modal/ModalShared.module.ts","webpack:///./src/app/shared/modal/modal.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA4B;AACH;AACzB,iC;;;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2E;AAC/C;AAC5B;AACA;AACA,+FAAyC,0BAA0B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB,gCAAgC,yBAAyB,4BAA4B,8BAA8B,wBAAwB,iBAAiB,gBAAgB,kCAAkC,mDAAmD,oCAAoC,4CAA4C,OAAO,uBAAuB,0BAA0B,+CAA+C,mCAAmC,aAAa,cAAc,oCAAoC,4CAA4C,OAAO,uBAAuB,kBAAkB,mBAAmB,0BAA0B,OAAO,6BAA6B,kBAAkB,mBAAmB,OAAO,wBAAwB,kBAAkB,mBAAmB,0BAA0B,OAAO,8BAA8B,kBAAkB,mBAAmB,OAAO,uBAAuB,kBAAkB,mBAAmB,0BAA0B,OAAO,6BAA6B,kBAAkB,mBAAmB,OAAO,kBAAkB,oCAAoC,sCAA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","file":"Attendance-report-setup-report-setup-module.js","sourcesContent":["export { UiSwitchComponent } from './ui-switch.component';\nexport { UiSwitchModule } from './ui-switch.module';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input, Output, EventEmitter, HostListener, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nvar UI_SWITCH_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return UiSwitchComponent; }),\n    multi: true\n};\nvar UiSwitchComponent = (function () {\n    function UiSwitchComponent() {\n        this.onTouchedCallback = function (v) {\n        };\n        this.onChangeCallback = function (v) {\n        };\n        this.size = 'medium';\n        this.change = new EventEmitter();\n        this.color = 'rgb(100, 189, 99)';\n        this.switchOffColor = '';\n        this.switchColor = '#fff';\n        this.defaultBgColor = '#fff';\n        this.defaultBoColor = '#dfdfdf';\n    }\n    Object.defineProperty(UiSwitchComponent.prototype, \"checked\", {\n        get: function () {\n            return this._checked;\n        },\n        set: function (v) {\n            this._checked = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UiSwitchComponent.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (v) {\n            this._disabled = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(UiSwitchComponent.prototype, \"reverse\", {\n        get: function () {\n            return this._reverse;\n        },\n        set: function (v) {\n            this._reverse = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    UiSwitchComponent.prototype.getColor = function (flag) {\n        if (flag === 'borderColor')\n            return this.defaultBoColor;\n        if (flag === 'switchColor') {\n            if (this.reverse)\n                return !this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n            return this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n        }\n        if (this.reverse)\n            return !this.checked ? this.color : this.defaultBgColor;\n        return this.checked ? this.color : this.defaultBgColor;\n    };\n    UiSwitchComponent.prototype.onToggle = function () {\n        if (this.disabled)\n            return;\n        this.checked = !this.checked;\n        this.change.emit(this.checked);\n        this.onChangeCallback(this.checked);\n        this.onTouchedCallback(this.checked);\n    };\n    UiSwitchComponent.prototype.writeValue = function (obj) {\n        if (obj !== this.checked) {\n            this.checked = !!obj;\n        }\n    };\n    UiSwitchComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    UiSwitchComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    return UiSwitchComponent;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], UiSwitchComponent.prototype, \"checked\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], UiSwitchComponent.prototype, \"disabled\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], UiSwitchComponent.prototype, \"reverse\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"size\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], UiSwitchComponent.prototype, \"change\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"color\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"switchOffColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"switchColor\", void 0);\n__decorate([\n    HostListener('click'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], UiSwitchComponent.prototype, \"onToggle\", null);\nUiSwitchComponent = __decorate([\n    Component({\n        selector: 'ui-switch',\n        template: \"\\n  <span class=\\\"switch\\\" \\n  [class.checked]=\\\"checked\\\" \\n  [class.disabled]=\\\"disabled\\\"\\n  [class.switch-large]=\\\"size === 'large'\\\"\\n  [class.switch-medium]=\\\"size === 'medium'\\\"\\n  [class.switch-small]=\\\"size === 'small'\\\"\\n  [style.background-color]=\\\"getColor()\\\"\\n  [style.border-color]=\\\"getColor('borderColor')\\\"\\n  >\\n  <small [style.background]=\\\"getColor('switchColor')\\\">\\n  </small>\\n  </span>\\n  \",\n        styles: [\n            \"\\n    .switch {\\n    background: #f00;\\n    border: 1px solid #dfdfdf;\\n    position: relative;\\n    display: inline-block;\\n    box-sizing: content-box;\\n    overflow: visible;\\n    padding: 0;\\n    margin: 0;            \\n    cursor: pointer;\\n    box-shadow: rgb(223, 223, 223) 0 0 0 0 inset;\\n    transition: 0.3s ease-out all;\\n    -webkit-transition: 0.3s ease-out all;\\n    }        \\n\\n    small {\\n    border-radius: 100%;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);          \\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    transition: 0.3s ease-out all;\\n    -webkit-transition: 0.3s ease-out all;\\n    }\\n\\n    .switch-large {\\n    width: 66px;\\n    height: 40px;\\n    border-radius: 40px;\\n    }\\n\\n    .switch-large small {\\n    width: 40px;\\n    height: 40px;\\n    }\\n\\n    .switch-medium {\\n    width: 50px;\\n    height: 30px;\\n    border-radius: 30px;\\n    }\\n\\n    .switch-medium small {\\n    width: 30px;\\n    height: 30px;\\n    }\\n\\n    .switch-small {\\n    width: 33px;\\n    height: 20px;\\n    border-radius: 20px;\\n    }\\n\\n    .switch-small small {\\n    width: 20px;\\n    height: 20px;\\n    }\\n\\n    .checked {\\n    background: rgb(100, 189, 99);\\n    border-color: rgb(100, 189, 99);\\n    }\\n\\n    .switch-large.checked small {\\n    left: 26px;\\n    }\\n\\n    .switch-medium.checked small {\\n    left: 20px;\\n    }\\n\\n    .switch-small.checked small {\\n    left: 13px;\\n    }\\n\\n    .disabled {\\n    opacity: .50;\\n    cursor: not-allowed;\\n    }\\n    \"\n        ],\n        providers: [UI_SWITCH_CONTROL_VALUE_ACCESSOR]\n    })\n], UiSwitchComponent);\nexport { UiSwitchComponent };\n//# sourceMappingURL=ui-switch.component.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from \"@angular/core\";\nimport { UiSwitchComponent } from \"./ui-switch.component\";\nvar UiSwitchModule = (function () {\n    function UiSwitchModule() {\n    }\n    return UiSwitchModule;\n}());\nUiSwitchModule = __decorate([\n    NgModule({\n        declarations: [UiSwitchComponent],\n        exports: [UiSwitchComponent]\n    })\n], UiSwitchModule);\nexport { UiSwitchModule };\n//# sourceMappingURL=ui-switch.module.js.map","module.exports = \"<ngx-spinner type=\\\"ball-clip-rotate-pulse\\\"></ngx-spinner>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <app-card title=\\\"Vendors\\\" [classHeader]=\\\"true\\\">\\r\\n        <table>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let rep of reportForGrid\\\">\\r\\n                <td>{{rep.Name}}</td> \\r\\n                <td><ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"rep.Selected\\\"\\r\\n                  #Notification=\\\"ngModel\\\" required></ui-switch></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n      </table>  \\r\\n      <h5>Add New Report</h5>\\r\\n      <hr>\\r\\n      <p>Enter the basic values in percentage for attendance reports</p>\\r\\n      <br>\\r\\n      <div>\\r\\n        <font color=\\\"green\\\">Excellent</font>\\r\\n      </div>\\r\\n      <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Excellent From\\\" placeholder=\\\"From (%)\\\"\\r\\n      [(ngModel)]=\\\"report.ExecellentFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n      &nbsp;\\r\\n      &nbsp;\\r\\n      <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Excellent To\\\" placeholder=\\\"To (%)\\\"\\r\\n      [(ngModel)]=\\\"report.ExcellecntTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <div>\\r\\n        <font color=\\\"green\\\">Good</font>\\r\\n      </div>\\r\\n      <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Good From\\\" placeholder=\\\"From (%)\\\"\\r\\n      [(ngModel)]=\\\"report.GoodFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n      &nbsp;\\r\\n      &nbsp;\\r\\n      <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Good To\\\" placeholder=\\\"To (%)\\\"\\r\\n      [(ngModel)]=\\\"report.GoodTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <div>\\r\\n          <font color=\\\"orange\\\">Satisfactory</font>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Satisfactory From\\\" placeholder=\\\"From (%)\\\"\\r\\n          [(ngModel)]=\\\"report.SatisfactoryFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n          &nbsp;\\r\\n          &nbsp;\\r\\n          <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Satisfactory To\\\" placeholder=\\\"To (%)\\\"\\r\\n          [(ngModel)]=\\\"report.SatisfactoryTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n          <br>\\r\\n          <br>\\r\\n          <br>\\r\\n          <div>\\r\\n            <font color=\\\"red\\\">Poor</font>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Poor From\\\" placeholder=\\\"From (%)\\\"\\r\\n          [(ngModel)]=\\\"report.PoorFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n          &nbsp;\\r\\n          &nbsp;\\r\\n          <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Poor To\\\" placeholder=\\\"To (%)\\\"\\r\\n          [(ngModel)]=\\\"report.PoorTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n          <br>\\r\\n          <br>\\r\\n          <br>\\r\\n          <div>\\r\\n            <font color=\\\"red\\\">Not Eligiable</font>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Not Eligiable From\\\" placeholder=\\\"From (%)\\\"\\r\\n          [(ngModel)]=\\\"report.NotEligibleFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n          &nbsp;\\r\\n          &nbsp;\\r\\n          <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Not Eligiable To\\\" placeholder=\\\"To (%)\\\"\\r\\n          [(ngModel)]=\\\"report.NotEligibleTo\\\"  #Name=\\\"ngModel\\\" required> \\r\\n          <br>\\r\\n          <br>\\r\\n          <br>\\r\\n       <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n            id=\\\"saveReports\\\"\\r\\n            (click)=\\\"saveReport()\\\" \\r\\n            (click)= \\\"ClearData()\\\" type=\\\"submit\\\" >Add New</button>\\r\\n    </app-card>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n\\r\\n    <jw-modal id=\\\"custom-modal-2\\\" >\\r\\n      <div class=\\\"app-modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\"><b>{{modalButtonTextClass}}</b>\\r\\n          <button type=\\\"button\\\" class=\\\"close basic-close\\\" (click)=\\\"closeModal1('custom-modal-2');\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button></h4>\\r\\n          <div style=\\\"text-align: center;\\\">\\r\\n            <h5>Class Name</h5>\\r\\n            <p>{{report.Name}}</p>\\r\\n          \\r\\n      <hr>\\r\\n      <p>Enter the basic values in percentage for attendance reports</p>\\r\\n      <br>\\r\\n      <div>\\r\\n          <font color=\\\"green\\\">Excellent</font>\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Excellent From\\\" placeholder=\\\"From (%)\\\"\\r\\n        [(ngModel)]=\\\"report.ExecellentFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Excellent To\\\" placeholder=\\\"To (%)\\\"\\r\\n        [(ngModel)]=\\\"report.ExcellecntTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n        <br>\\r\\n        <br>\\r\\n        <br>\\r\\n        <div>\\r\\n          <font color=\\\"green\\\">Good</font>\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Good From\\\" placeholder=\\\"From (%)\\\"\\r\\n        [(ngModel)]=\\\"report.GoodFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Good To\\\" placeholder=\\\"To (%)\\\"\\r\\n        [(ngModel)]=\\\"report.GoodTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n        <br>\\r\\n        <br>\\r\\n        <br>\\r\\n        <div>\\r\\n            <font color=\\\"orange\\\">Satisfactory</font>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Satisfactory From\\\" placeholder=\\\"From (%)\\\"\\r\\n            [(ngModel)]=\\\"report.SatisfactoryFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n            &nbsp;\\r\\n            &nbsp;\\r\\n            <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Satisfactory To\\\" placeholder=\\\"To (%)\\\"\\r\\n            [(ngModel)]=\\\"report.SatisfactoryTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n            <div>\\r\\n              <font color=\\\"red\\\">Poor</font>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Poor From\\\" placeholder=\\\"From (%)\\\"\\r\\n            [(ngModel)]=\\\"report.PoorFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n            &nbsp;\\r\\n            &nbsp;\\r\\n            <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Poor To\\\" placeholder=\\\"To (%)\\\"\\r\\n            [(ngModel)]=\\\"report.PoorTo\\\"  #Name=\\\"ngModel\\\" required>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n            <div>\\r\\n              <font color=\\\"red\\\">Not Eligiable</font>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Not Eligiable From\\\" placeholder=\\\"From (%)\\\"\\r\\n            [(ngModel)]=\\\"report.NotEligibleFrom\\\"  #Name=\\\"ngModel\\\" required>\\r\\n            &nbsp;\\r\\n            &nbsp;\\r\\n            <input type=\\\"text\\\" size=\\\"10\\\" name=\\\"Not Eligiable To\\\" placeholder=\\\"To (%)\\\"\\r\\n            [(ngModel)]=\\\"report.NotEligibleTo\\\"  #Name=\\\"ngModel\\\" required>  \\r\\n          <br>\\r\\n          <br>\\r\\n          <br>\\r\\n       <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n            id=\\\"updateReports\\\"\\r\\n            (click)=\\\"updateReport()\\\">{{modalButtonText}}</button>\\r\\n\\r\\n\\r\\n        \\r\\n\\r\\n\\r\\n        &nbsp;\\r\\n        &nbsp;\\r\\n        <button type=\\\"button\\\" id=\\\"closenewclass\\\" class=\\\"btn btn-danger\\\"\\r\\n          (click)=\\\"closeModal1('custom-modal-2')\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </jw-modal>\\r\\n    <app-card title=\\\"Vendorslist\\\" [classHeader]=\\\"true\\\">\\r\\n      <h5>Class</h5>\\r\\n      <hr>\\r\\n\\r\\n      <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"reports\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"\\r\\n        (editConfirm)=\\\"onSaveConfirm($event)\\\" (createConfirm)=\\\"onCreateConfirm($event)\\\"\\r\\n        (custom)=\\\"onReportCustomAction($event)\\\">\\r\\n\\r\\n      </ng2-smart-table>\\r\\n    </app-card>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\"","import { ClasssectionService } from 'src/app/service/classsection.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ModalService } from 'src/app/service/modal.service';\r\nimport { ReportSetupService } from 'src/app/service/report-setup.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Classsection } from 'src/app/shared/Models/classsection';\r\nimport { ReportSetup } from 'src/app/shared/Models/report-setup';\r\n\r\n@Component({\r\n  selector: 'app-report-setup',\r\n  templateUrl: './report-setup.component.html',\r\n  styleUrls: ['./report-setup.component.scss'],\r\n  providers: [ ModalService, ReportSetupService ]\r\n})\r\nexport class ReportSetupComponent implements OnInit {\r\n\r\n  classessections: Classsection[] = Array();\r\n  modalButtonText = 'Add New';\r\n  modalButtonTextClass = 'Add New Report';\r\n  report = new ReportSetup();\r\n  reports: ReportSetup[] = Array();\r\n  reportForGrid: ReportSetup[] = Array();\r\n\r\n\r\n  paramData = {\r\n    reportSetupArr: ReportSetup [1] =  Array(),\r\n  }\r\n\r\n  constructor(private _classessectionService:ClasssectionService,\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private modalService: ModalService,\r\n    private _reportService: ReportSetupService) { }\r\n\r\n  ngOnInit() {\r\n    this.getClasssectionDetails();\r\n    this.getReportsDetails();\r\n  }\r\n\r\n  saveReport() {\r\n    \r\n    this.reportForGrid.forEach((item) => {\r\n      if (item.Selected) {\r\n      item.ClassSectionMediumId=item.Id;\r\n      item.ExecellentFrom = this.report.ExecellentFrom;\r\n      item.ExcellecntTo = this.report.ExcellecntTo;\r\n      item.GoodFrom = this.report.GoodFrom;\r\n      item.GoodTo = this.report.GoodTo;\r\n      item.SatisfactoryFrom = this.report.SatisfactoryFrom;\r\n      item.SatisfactoryTo = this.report.SatisfactoryTo;\r\n      item.PoorFrom = this.report.PoorFrom;\r\n      item.PoorTo = this.report.PoorTo;\r\n      item.NotEligibleFrom = this.report.NotEligibleFrom;\r\n      item.NotEligibleTo = this.report.NotEligibleTo;      \r\n      }\r\n  });\r\n    this.paramData.reportSetupArr = this.reportForGrid;\r\n    console.log('ReportArr' + this.reportForGrid);\r\n    this.spinner.show();\r\n    this._reportService.setReportDetails(this.paramData)\r\n    .subscribe(data => {\r\n      if  (data.success) {\r\n      this.spinner.hide();\r\n      this.toastr.success('successfully' + this.modalButtonText + '!', 'Success');\r\n      console.log('New Report Added');\r\n      this.getClasssectionDetails();\r\n      this.ClearData();\r\n      } else {\r\n        this.toastr.error(data.message, 'server error!!');\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  updateReport() {\r\n    console.log('Report ' + this.report.Id);\r\n    this.spinner.show();\r\n    this._reportService.setSingleReportDetails(this.report)\r\n    .subscribe(data => {\r\n      if  (data.success) {\r\n      this.spinner.hide();\r\n      this.toastr.success('successfully' + this.modalButtonText + '!', 'Success');\r\n      console.log('Report Updated');\r\n      this.getReportsDetails();\r\n      this.ClearData();\r\n      this.closeModal1('custom-modal-2');\r\n      } else {\r\n        this.toastr.error(data.message, 'server error!!');\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  OpenClassModal(id: string) {\r\n    this.ClearData();\r\n    this.modalService.open(id);\r\n  }\r\n\r\n  closeModal1(id: string) {\r\n    this.modalService.close(id);\r\n  }\r\n\r\n  getClasssectionDetails() {\r\n    console.log();\r\n    this.spinner.show();\r\n    this._classessectionService.getClasssectionDetails()\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          console.log('Success!!');\r\n          this.classessections = data.data[0];\r\n          this.reportForGrid  = Object.assign([], this.classessections);\r\n          console.log(this.reportForGrid);\r\n          this.spinner.hide();\r\n        }\r\n        else {\r\n          this.toastr.error(data.message, \"Opps!\");\r\n        }\r\n      });\r\n  }\r\n\r\n  getReportsDetails() {\r\n    console.log(\"This is Right side grid reports\");\r\n    this.spinner.show();\r\n    this._reportService.getReportsDetails()\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          console.log('Success from reports !!');\r\n          this.reports = data.data[0];\r\n          console.log(this.reports);\r\n          this.spinner.hide();\r\n        }\r\n        else {\r\n          this.toastr.error(data.message, \"Opps!\");\r\n        }\r\n      });\r\n  }\r\n\r\n  ClearData() {\r\n   this.report = new ReportSetup;\r\n  }\r\n\r\n  onReportCustomAction(event) {\r\n    console.log(event.data);\r\n    if (event.action === 'editrecord') {\r\n      this.modalService.open('custom-modal-2'); \r\n      this.report = event.data;\r\n      this.modalButtonTextClass = 'Edit Attendance Report';\r\n      this.modalButtonText = 'Update';\r\n    }\r\n\r\n  }\r\n\r\n  settings = {\r\n\r\n    delete: {\r\n      confirmDelete: true,\r\n      deleteButtonContent: '<i class=\"fa fa-trash\"></i>',\r\n      saveButtonContent: 'save',\r\n      cancelButtonContent: 'cancel'\r\n    },\r\n   \r\n    add: {\r\n      confirmCreate: true,\r\n    },\r\n   \r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: true,\r\n      custom: [\r\n        { name: 'editrecord', title: '<i class=\"fa fa-edit\"></i>' },\r\n      ],\r\n   \r\n   \r\n    },\r\n   \r\n    columns: { \r\n      \r\n      Name: {\r\n        title: 'Class',\r\n      },\r\n    },\r\n   };\r\n   \r\n\r\n \r\n\r\n  onDeleteConfirm(event) {\r\n    this.report = event.data;\r\n    console.log(\"report\" + this.report.Id)\r\n    this.spinner.show();\r\n    this._reportService.delReportDetails(this.report)\r\n    .subscribe(data => {\r\n      if  (data.success) {\r\n      this.spinner.hide();  \r\n      this.toastr.success('successfully' +  'Deleted!', 'Success');\r\n      console.log(\"report Deleted\")\r\n      this.getClasssectionDetails();\r\n      this.ClearData();\r\n      }\r\n      else{\r\n        this.toastr.error(data.message, 'server error!!');\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateConfirm(event) {\r\n    console.log(\"Create Event In Console\")\r\n    console.log(event);\r\n\r\n  }\r\n\r\n  onSaveConfirm(event) {\r\n    console.log(\"Edit Event In Console\")\r\n    console.log(event);\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReportSetupComponent } from './report-setup.component';\r\nimport { ReportSetupRoutingModule } from './report-setup.routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ModalSharedModule } from 'src/app/shared/modal/ModalShared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { UiSwitchModule } from 'ng2-ui-switch';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReportSetupRoutingModule,\r\n    SharedModule,\r\n    ModalSharedModule,\r\n    NgxSpinnerModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2SmartTableModule,\r\n    UiSwitchModule\r\n  ],\r\n  declarations: [ReportSetupComponent]\r\n})\r\nexport class ReportSetupModule { }\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ReportSetupComponent } from \"./report-setup.component\";\r\n\r\n\r\n\r\n\r\n\r\nconst routes: Routes =[\r\n    {\r\n        path:'',\r\n        component: ReportSetupComponent,\r\n        data: {\r\n             title: 'ReportSetup',\r\n              icon: 'ti-bar-chart-alt',\r\n           caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit - chart js',\r\n            status: true\r\n        }\r\n    },\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class ReportSetupRoutingModule{\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { ServiceUitility } from './ServiceUitility';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClasssectionService {\r\n  private route = '/ClassSectionMedium';\r\n  private _getClasssection = this.route + '/getClassSectionMediums';\r\n  private _setClasssection = this.route + '/setClassSectionMedium';\r\n\r\n  constructor(private serviceUitility: ServiceUitility) { }\r\n\r\ngetClasssectionDetails() {\r\n  return this.serviceUitility.postRequest(this._getClasssection, '');\r\n}\r\n\r\nsetClasssectionDetails(obj) {\r\n  return this.serviceUitility.postRequest(this._setClasssection, obj);\r\n}\r\n\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        let modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        let modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.close();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ServiceUitility } from './ServiceUitility';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportSetupService {\r\n\r\n  private route = '/ReportSetup';\r\n  private _getReports = this.route + '/getreports';\r\n  private _getReport = this.route + '/getreport';\r\n  private _setReport = this.route + '/setreport';\r\n  private _setSingleReport = this.route + '/setsinglereport';\r\n  private _delReport = this.route + '/delreport';\r\n  \r\n    constructor(private serviceUitility: ServiceUitility) { }\r\n  \r\n    getReportsDetails(){\r\n      return this.serviceUitility.postRequest(this._getReports,'');\r\n    }\r\n  \r\n    getReportDetails(){\r\n      return this.serviceUitility.postRequest(this._getReport,'');\r\n    }\r\n  \r\n    setReportDetails(obj){\r\n      return this.serviceUitility.postRequest(this._setReport, obj);\r\n    }\r\n    setSingleReportDetails(obj){\r\n      return this.serviceUitility.postRequest(this._setSingleReport, obj);\r\n    }\r\n    delReportDetails(obj){\r\n      return this.serviceUitility.postRequest(this._delReport, obj);\r\n    }\r\n  \r\n  }\r\n  \r\n","export class ReportSetup {\r\n\r\n    Id: Number;\r\n    ClassSectionMediumId: Number;\r\n    ExecellentFrom: Number;\r\n    ExcellecntTo: Number;\r\n    GoodFrom: Number;\r\n    GoodTo: Number;\r\n    SatisfactoryFrom: Number;\r\n    SatisfactoryTo: Number;\r\n    PoorFrom: Number;\r\n    PoorTo: Number;\r\n    NotEligibleFrom: Number; \r\n    NotEligibleTo: Number;\r\n    Selected: boolean;\r\n    Name: string;\r\n       constructor ( ) {\r\n           this.Id = -1;\r\n           \r\n       }\r\n   }","import { ModalComponent } from \"./modal.component\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({\r\n    declarations: [ ModalComponent ],\r\n    exports: [ ModalComponent ]\r\n  })\r\n export class ModalSharedModule {}","﻿import { Component, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalService } from '../../service/modal.service';\r\n// https://jasonwatmore.com/post/2019/04/16/angular-7-custom-modal-window-dialog-box\r\n// https://github.com/cornflourblue/angular-7-custom-modal\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'jw-modal',\r\n    template:\r\n        `<div class=\"jw-modal\">\r\n            <div class=\"jw-modal-body\">\r\n                <ng-content></ng-content>\r\n            </div>\r\n        </div>\r\n        <div class=\"jw-modal-background\"></div>`\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const modal = this;\r\n\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', function (e: any) {\r\n            if (e.target.className === 'jw-modal') {\r\n                modal.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jw-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jw-modal-open');\r\n    }\r\n}\r\n"],"sourceRoot":""}