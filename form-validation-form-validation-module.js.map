{"version":3,"sources":["webpack:///./src/app/theme/forms/form-validation/form-validation-routing.module.ts","webpack:///./src/app/theme/forms/form-validation/form-validation.component.html","webpack:///./src/app/theme/forms/form-validation/form-validation.component.scss","webpack:///./src/app/theme/forms/form-validation/form-validation.component.ts","webpack:///./src/app/theme/forms/form-validation/form-validation.module.ts"],"names":[],"mappings":"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","file":"form-validation-form-validation-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {FormValidationComponent} from './form-validation.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FormValidationComponent,\r\n    data: {\r\n      title: 'Forms Validation',\r\n      icon: 'ti-layers',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit - form validation',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormValidationRoutingModule { }\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <!-- Basic Inputs Validation start -->\\r\\n    <app-card title=\\\"'Basic Inputs Validation'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\" [cardOptionBlock]=\\\"true\\\">\\r\\n      <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Simple Input</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Text Input Validation\\\" formControlName=\\\"name\\\">\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"myForm.controls.name.errors?.required\\\">Name can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Password</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\"  placeholder=\\\"Password input\\\" formControlName=\\\"password\\\">\\r\\n            <div class=\\\"messages text-danger error\\\" *ngIf=\\\"myForm.controls.password.errors?.required\\\">Password can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Repeat Password</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"rpassword\\\" placeholder=\\\"Repeat Password\\\" formControlName=\\\"rpassword\\\">\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"myForm.controls.rpassword.errors?.required\\\">Repeat password can't be blank</div>\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"myForm.controls.rpassword.errors?.equalTo\\\">The passwords does not match</div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Email</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter valid e-mail address\\\" formControlName=\\\"email\\\">\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"myForm.controls.email.errors?.required\\\">Email can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Radio Buttons</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <div class=\\\"form-check form-check-inline\\\">\\r\\n              <label class=\\\"form-check-label\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"option1\\\" formControlName=\\\"gender\\\"> Male\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-check form-check-inline\\\">\\r\\n              <label class=\\\"form-check-label\\\">\\r\\n                <input class=\\\"form-check-input\\\" type=\\\"radio\\\" value=\\\"option2\\\" formControlName=\\\"gender\\\"> Female\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"myForm.controls.gender.errors?.required\\\">Gender can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2\\\"></label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary m-b-0\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Basic Inputs Validation end -->\\r\\n    <!-- Tooltip Validation card start -->\\r\\n    <app-card title=\\\"'Tooltip Validation'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\" [cardOptionBlock]=\\\"true\\\">\\r\\n      <form [formGroup]=\\\"mytooltipForm\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Username</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control tooltip-form\\\" id=\\\"usernameP\\\" formControlName=\\\"usernameP\\\" name=\\\"Username\\\" placeholder=\\\"Enter Username\\\">\\r\\n            <div class=\\\"messages text-danger tooltip-error\\\" placement=\\\"top\\\" ngbTooltip=\\\"Username can't be blank\\\" *ngIf=\\\"mytooltipForm.controls.usernameP.errors?.required\\\"><i class=\\\"text-danger icofont icofont-close-circled\\\"></i></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Email-id</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control tooltip-form\\\" id=\\\"EmailP\\\" formControlName=\\\"EmailP\\\" name=\\\"Email\\\" placeholder=\\\"Enter email id\\\">\\r\\n            <div class=\\\"messages text-danger tooltip-error\\\" placement=\\\"top\\\" ngbTooltip=\\\"Email can't be blank\\\" *ngIf=\\\"mytooltipForm.controls.EmailP.errors?.required\\\"><i class=\\\"text-danger icofont icofont-close-circled\\\"></i></div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-sm-2\\\"></label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary m-b-0\\\" [disabled]=\\\"!mytooltipForm.valid\\\">Submit</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Tooltip Validation card end -->\\r\\n    <!-- Number Validation card start -->\\r\\n    <app-card title=\\\"'Number Validation'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\" [cardOptionBlock]=\\\"true\\\">\\r\\n      <form [formGroup]=\\\"mynumberForm\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Integers Only</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"integer\\\" id=\\\"integer\\\" formControlName=\\\"integer\\\" placeholder=\\\"Integers Only\\\">\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"mynumberForm.controls.integer.errors?.required\\\">Integer can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Numbers Only</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"numeric\\\" id=\\\"numeric\\\" formControlName=\\\"numeric\\\" placeholder=\\\"Numbers Only\\\">\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"mynumberForm.controls.numeric.errors?.required\\\">Numeric can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Greater number</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Number\\\" id=\\\"greater\\\" formControlName=\\\"greater\\\" placeholder=\\\"Number Greter than 50\\\">\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"mynumberForm.controls.greater.errors?.required\\\">Numeric can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Less number</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Numbers\\\" id=\\\"less\\\" formControlName=\\\"less\\\" lt=\\\"5\\\" placeholder=\\\"Number Less than 50\\\">\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"mynumberForm.controls.less.errors?.required\\\">Numeric can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-sm-2\\\"></label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"!mynumberForm.valid\\\" class=\\\"btn btn-primary m-b-0\\\">Submit</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- Number Validation card end -->\\r\\n    <!-- component form start -->\\r\\n    <app-card title=\\\"'Form components Validation'\\\" [headerContent]=\\\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\\\" [cardOptionBlock]=\\\"true\\\">\\r\\n      <form [formGroup]=\\\"checkdropForm\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2\\\">Radio Buttons</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <div class=\\\"form-radio\\\">\\r\\n              <div class=\\\"radio radiofill radio-primary radio-inline\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"radio\\\" value=\\\"free\\\" formControlName=\\\"area\\\">\\r\\n                  <i class=\\\"helper\\\"></i>Select here\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"radio radiofill radio-primary radio-inline\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"radio\\\" value=\\\"personal\\\" formControlName=\\\"area\\\">\\r\\n                  <i class=\\\"helper\\\"></i>Another select\\r\\n                </label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"checkdropForm.controls.area.errors?.required\\\">Member can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-sm-2\\\">Select Checkbox</label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <div class=\\\"checkbox-fade fade-in-primary\\\">\\r\\n              <label>\\r\\n                <input type=\\\"checkbox\\\" value=\\\"HTML\\\" formControlName=\\\"job\\\">\\r\\n                <span class=\\\"cr\\\"><i class=\\\"cr-icon icofont icofont-ui-check txt-primary\\\"></i></span>\\r\\n                <span>HTML</span>\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"checkbox-fade fade-in-primary\\\">\\r\\n              <label>\\r\\n                <input type=\\\"checkbox\\\" value=\\\"CSS\\\" formControlName=\\\"job\\\">\\r\\n                <span class=\\\"cr\\\"><i class=\\\"cr-icon icofont icofont-ui-check txt-primary\\\"></i></span>\\r\\n                <span>CSS</span>\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"messages text-danger\\\" *ngIf=\\\"checkdropForm.controls.job.errors?.required\\\">Language can't be blank</div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-sm-2\\\"></label>\\r\\n          <div class=\\\"col-sm-10\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary m-b-0\\\" [disabled]=\\\"!checkdropForm.valid\\\">Submit</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </app-card>\\r\\n    <!-- component form end -->\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {CustomValidators} from 'ng2-validation';\r\n\r\n@Component({\r\n  selector: 'app-form-validation',\r\n  templateUrl: './form-validation.component.html',\r\n  styleUrls: [\r\n    './form-validation.component.scss',\r\n    '../../../../assets/icon/icofont/css/icofont.scss'\r\n  ]\r\n})\r\nexport class FormValidationComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  mynumberForm: FormGroup;\r\n  mytooltipForm: FormGroup;\r\n  checkdropForm: FormGroup;\r\n  submitted: boolean;\r\n\r\n  constructor() {\r\n\r\n    const name = new FormControl('', Validators.required);\r\n    const password = new FormControl('', Validators.required);\r\n    const gender = new FormControl('', Validators.required);\r\n    const email = new FormControl('', [Validators.required, Validators.email]);\r\n\r\n    const rpassword = new FormControl('', [Validators.required, CustomValidators.equalTo(password)]);\r\n    this.myForm = new FormGroup({\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      rpassword: rpassword,\r\n      gender: gender\r\n    });\r\n    /*Basic validation end*/\r\n\r\n    /*number Validation start*/\r\n    const integer = new FormControl('', [Validators.required, CustomValidators.digits]);\r\n    const numeric = new FormControl('', [Validators.required, CustomValidators.number]);\r\n    const greater = new FormControl('', [Validators.required, CustomValidators.gt(50)]);\r\n    const less = new FormControl('', [Validators.required, CustomValidators.lt(50)]);\r\n\r\n    this.mynumberForm = new FormGroup({\r\n      integer: integer,\r\n      numeric: numeric,\r\n      greater: greater,\r\n      less: less\r\n    });\r\n    /*number validation end*/\r\n\r\n    /*Tooltip Validation Start*/\r\n    const usernameP = new FormControl('', [Validators.required]);\r\n    const EmailP = new FormControl('', [Validators.required, Validators.email]);\r\n    this.mytooltipForm = new FormGroup({\r\n      usernameP: usernameP,\r\n      EmailP: EmailP,\r\n    });\r\n    /*Tooltip Validation End*/\r\n\r\n    /* component form */\r\n    const area = new FormControl('', [Validators.required]);\r\n    const job = new FormControl('', [Validators.required]);\r\n    this.checkdropForm = new FormGroup({\r\n      area: area,\r\n      job: job,\r\n    });\r\n    /* end component form */\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    console.log(this.myForm);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormValidationComponent } from './form-validation.component';\r\nimport {FormValidationRoutingModule} from './form-validation-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormValidationRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [FormValidationComponent]\r\n})\r\nexport class FormValidationModule { }\r\n"],"sourceRoot":""}