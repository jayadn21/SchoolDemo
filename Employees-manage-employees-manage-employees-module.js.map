{"version":3,"sources":["webpack:///./node_modules/ng2-ui-switch/dist/index.js","webpack:///./node_modules/ng2-ui-switch/dist/ui-switch.component.js","webpack:///./node_modules/ng2-ui-switch/dist/ui-switch.module.js","webpack:///./src/app/Employees/manage-employees/manage-employees-routing.module.ts","webpack:///./src/app/Employees/manage-employees/manage-employees.component.html","webpack:///./src/app/Employees/manage-employees/manage-employees.component.scss","webpack:///./src/app/Employees/manage-employees/manage-employees.component.ts","webpack:///./src/app/Employees/manage-employees/manage-employees.module.ts","webpack:///./src/app/service/modal.service.ts","webpack:///./src/app/shared/modal/ModalShared.module.ts","webpack:///./src/app/shared/modal/modal.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA4B;AACH;AACzB,iC;;;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2E;AAC/C;AAC5B;AACA;AACA,+FAAyC,0BAA0B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB,gCAAgC,yBAAyB,4BAA4B,8BAA8B,wBAAwB,iBAAiB,gBAAgB,kCAAkC,mDAAmD,oCAAoC,4CAA4C,OAAO,uBAAuB,0BAA0B,+CAA+C,mCAAmC,aAAa,cAAc,oCAAoC,4CAA4C,OAAO,uBAAuB,kBAAkB,mBAAmB,0BAA0B,OAAO,6BAA6B,kBAAkB,mBAAmB,OAAO,wBAAwB,kBAAkB,mBAAmB,0BAA0B,OAAO,8BAA8B,kBAAkB,mBAAmB,OAAO,uBAAuB,kBAAkB,mBAAmB,0BAA0B,OAAO,6BAA6B,kBAAkB,mBAAmB,OAAO,kBAAkB,oCAAoC,sCAA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","file":"Employees-manage-employees-manage-employees-module.js","sourcesContent":["export { UiSwitchComponent } from './ui-switch.component';\nexport { UiSwitchModule } from './ui-switch.module';\n//# sourceMappingURL=index.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input, Output, EventEmitter, HostListener, forwardRef } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\nvar UI_SWITCH_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return UiSwitchComponent; }),\n    multi: true\n};\nvar UiSwitchComponent = (function () {\n    function UiSwitchComponent() {\n        this.onTouchedCallback = function (v) {\n        };\n        this.onChangeCallback = function (v) {\n        };\n        this.size = 'medium';\n        this.change = new EventEmitter();\n        this.color = 'rgb(100, 189, 99)';\n        this.switchOffColor = '';\n        this.switchColor = '#fff';\n        this.defaultBgColor = '#fff';\n        this.defaultBoColor = '#dfdfdf';\n    }\n    Object.defineProperty(UiSwitchComponent.prototype, \"checked\", {\n        get: function () {\n            return this._checked;\n        },\n        set: function (v) {\n            this._checked = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UiSwitchComponent.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (v) {\n            this._disabled = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(UiSwitchComponent.prototype, \"reverse\", {\n        get: function () {\n            return this._reverse;\n        },\n        set: function (v) {\n            this._reverse = v !== false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    UiSwitchComponent.prototype.getColor = function (flag) {\n        if (flag === 'borderColor')\n            return this.defaultBoColor;\n        if (flag === 'switchColor') {\n            if (this.reverse)\n                return !this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n            return this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n        }\n        if (this.reverse)\n            return !this.checked ? this.color : this.defaultBgColor;\n        return this.checked ? this.color : this.defaultBgColor;\n    };\n    UiSwitchComponent.prototype.onToggle = function () {\n        if (this.disabled)\n            return;\n        this.checked = !this.checked;\n        this.change.emit(this.checked);\n        this.onChangeCallback(this.checked);\n        this.onTouchedCallback(this.checked);\n    };\n    UiSwitchComponent.prototype.writeValue = function (obj) {\n        if (obj !== this.checked) {\n            this.checked = !!obj;\n        }\n    };\n    UiSwitchComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    UiSwitchComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    return UiSwitchComponent;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], UiSwitchComponent.prototype, \"checked\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], UiSwitchComponent.prototype, \"disabled\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], UiSwitchComponent.prototype, \"reverse\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"size\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], UiSwitchComponent.prototype, \"change\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"color\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"switchOffColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], UiSwitchComponent.prototype, \"switchColor\", void 0);\n__decorate([\n    HostListener('click'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], UiSwitchComponent.prototype, \"onToggle\", null);\nUiSwitchComponent = __decorate([\n    Component({\n        selector: 'ui-switch',\n        template: \"\\n  <span class=\\\"switch\\\" \\n  [class.checked]=\\\"checked\\\" \\n  [class.disabled]=\\\"disabled\\\"\\n  [class.switch-large]=\\\"size === 'large'\\\"\\n  [class.switch-medium]=\\\"size === 'medium'\\\"\\n  [class.switch-small]=\\\"size === 'small'\\\"\\n  [style.background-color]=\\\"getColor()\\\"\\n  [style.border-color]=\\\"getColor('borderColor')\\\"\\n  >\\n  <small [style.background]=\\\"getColor('switchColor')\\\">\\n  </small>\\n  </span>\\n  \",\n        styles: [\n            \"\\n    .switch {\\n    background: #f00;\\n    border: 1px solid #dfdfdf;\\n    position: relative;\\n    display: inline-block;\\n    box-sizing: content-box;\\n    overflow: visible;\\n    padding: 0;\\n    margin: 0;            \\n    cursor: pointer;\\n    box-shadow: rgb(223, 223, 223) 0 0 0 0 inset;\\n    transition: 0.3s ease-out all;\\n    -webkit-transition: 0.3s ease-out all;\\n    }        \\n\\n    small {\\n    border-radius: 100%;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);          \\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    transition: 0.3s ease-out all;\\n    -webkit-transition: 0.3s ease-out all;\\n    }\\n\\n    .switch-large {\\n    width: 66px;\\n    height: 40px;\\n    border-radius: 40px;\\n    }\\n\\n    .switch-large small {\\n    width: 40px;\\n    height: 40px;\\n    }\\n\\n    .switch-medium {\\n    width: 50px;\\n    height: 30px;\\n    border-radius: 30px;\\n    }\\n\\n    .switch-medium small {\\n    width: 30px;\\n    height: 30px;\\n    }\\n\\n    .switch-small {\\n    width: 33px;\\n    height: 20px;\\n    border-radius: 20px;\\n    }\\n\\n    .switch-small small {\\n    width: 20px;\\n    height: 20px;\\n    }\\n\\n    .checked {\\n    background: rgb(100, 189, 99);\\n    border-color: rgb(100, 189, 99);\\n    }\\n\\n    .switch-large.checked small {\\n    left: 26px;\\n    }\\n\\n    .switch-medium.checked small {\\n    left: 20px;\\n    }\\n\\n    .switch-small.checked small {\\n    left: 13px;\\n    }\\n\\n    .disabled {\\n    opacity: .50;\\n    cursor: not-allowed;\\n    }\\n    \"\n        ],\n        providers: [UI_SWITCH_CONTROL_VALUE_ACCESSOR]\n    })\n], UiSwitchComponent);\nexport { UiSwitchComponent };\n//# sourceMappingURL=ui-switch.component.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from \"@angular/core\";\nimport { UiSwitchComponent } from \"./ui-switch.component\";\nvar UiSwitchModule = (function () {\n    function UiSwitchModule() {\n    }\n    return UiSwitchModule;\n}());\nUiSwitchModule = __decorate([\n    NgModule({\n        declarations: [UiSwitchComponent],\n        exports: [UiSwitchComponent]\n    })\n], UiSwitchModule);\nexport { UiSwitchModule };\n//# sourceMappingURL=ui-switch.module.js.map","import { ManageEmployeesComponent } from './manage-employees.component';\r\nimport { NgModule} from '@angular/core';\r\nimport { RouterModule, Routes} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: ManageEmployeesComponent,\r\n    data: {\r\n      title: 'Manage Employees',\r\n      status: true\r\n    },\r\n    },\r\n\r\n ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ManageEmployeesRoutingModule {}\r\n","module.exports = \"<div class=\\\"page-body\\\">\\r\\n  <ngx-spinner type=\\\"ball-clip-rotate-pulse\\\"></ngx-spinner>\\r\\n  <form ref='uploadForm'\\r\\n      id='uploadForm'\\r\\n      action='http://localhost:4200/FileUploadExpress/upload'\\r\\n      method='post'\\r\\n      encType=\\\"multipart/form-data\\\">\\r\\n        <input type=\\\"file\\\" name=\\\"sampleFile\\\" />\\r\\n        <input type='submit' value='Upload!' />\\r\\n    </form>\\r\\n  <div>\\r\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"openNewEmpModal('custom-modal-2')\\\">Create Employee</button>\\r\\n  </div>\\r\\n  <br />\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xl-12\\\">\\r\\n      <app-card>\\r\\n        <h5>Register New Employee</h5>\\r\\n        <hr>\\r\\n        <div class=\\\"col-xl-12\\\">\\r\\n          <ng2-smart-table class=\\\"table-responsive\\\" [settings]=\\\"settings\\\" [source]=\\\"employees\\\"\\r\\n            (deleteConfirm)=\\\"onDeleteConfirm($event)\\\" (editConfirm)=\\\"onSaveConfirm($event)\\\"\\r\\n            (createConfirm)=\\\"onCreateConfirm($event)\\\" (custom)=\\\"onCustomAction($event)\\\">\\r\\n          </ng2-smart-table>\\r\\n        </div>\\r\\n        <!-- Smart-Table End -->\\r\\n      </app-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Model-PopUp for Update Employee Start -->\\r\\n<!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" id=\\\"updateEmployeePopup\\\"\\r\\n  (click)=\\\"newEmployeeModal('updateEmployee')\\\">Employee</button> -->\\r\\n<jw-modal id=\\\"custom-modal-2\\\">\\r\\n  <div class=\\\"app-modal-header\\\">\\r\\n    <div style=\\\"text-align:center;\\\">\\r\\n      <h4 class=\\\"modal-title\\\"><b>{{modalName}}</b><button type=\\\"button\\\" class=\\\"close basic-close\\\"\\r\\n          (click)=\\\"closeModal('custom-modal-2');\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button></h4>\\r\\n      <hr>\\r\\n    </div>\\r\\n    <!-- split pages start -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        <form #manageEmployeeForm=\\\"ngForm\\\">\\r\\n          <h4 class=\\\"sub-title\\\">\\r\\n            <font size=\\\"4\\\">Login infromation</font>\\r\\n          </h4>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"LoginId\\\" placeholder=\\\"Login Id\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.UserName\\\" #LoginId=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"LoginId.errors?.pattern || (LoginId.errors && (LoginId.dirty || LoginId.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                LoginId Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Name\\\" placeholder=\\\"Full Name\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.Name\\\" #Name=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"Name.errors?.pattern || (Name.errors && (Name.dirty || Name.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                Name Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"EmpCode\\\" placeholder=\\\"Employee Code\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.EmpCode\\\" #EmpCode=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"EmpCode.errors?.pattern || (EmpCode.errors && (EmpCode.dirty || EmpCode.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                Employee Code Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <font size=\\\"4\\\">Set Password</font>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"userPass\\\" placeholder=\\\"Password\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.Password\\\" #userPass=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"userPass.errors?.pattern || (userPass.errors && (userPass.dirty || userPass.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                valid Password Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPass\\\" placeholder=\\\"Confirm Password\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.confirmPass\\\" #confirmPass=\\\"ngModel\\\"\\r\\n                pattern=\\\"{{selectedEmployee.Password}}\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"confirmPass.errors?.pattern || (confirmPass.errors && (confirmPass.dirty || confirmPass.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                Confirm Password not match.\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <font size=\\\"4\\\">Contact Information</font>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"PhoneNumber\\\" placeholder=\\\"Primary Mobile\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.PhoneNumber\\\" #PhoneNumber=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"PhoneNumber.errors?.pattern || (PhoneNumber.errors && (PhoneNumber.dirty || PhoneNumber.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                Phone Number Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"AlternatePhoneNumber\\\" placeholder=\\\"Secondary Mobile\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.AlternatePhoneNumber\\\" #AlternatePhoneNumber=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"AlternatePhoneNumber.errors?.pattern || (AlternatePhoneNumber.errors && (AlternatePhoneNumber.dirty || AlternatePhoneNumber.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                Secondary Phone Number Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.EmailId\\\" #email=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"email.errors?.pattern || (email.errors && (email.dirty || email.touched))\\\" class=\\\"text-danger\\\">\\r\\n              Email address Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"PresentAddress\\\" placeholder=\\\"Present Address\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.PresentAddress\\\" #PresentAddress=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"PresentAddress.errors?.pattern || (PresentAddress.errors && (PresentAddress.dirty || PresentAddress.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                Address Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"selectedEmployee.check\\\"\\r\\n                  #check=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required></ui-switch>\\r\\n              </div>: Check this if Permanent is same as above\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\"></div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"PermanentAddress\\\" placeholder=\\\"Permanent Address\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.PermanentAddress\\\" #PermanentAddress=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"PermanentAddress.errors?.pattern || (PermanentAddress.errors && (PermanentAddress.dirty || PermanentAddress.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                Permanent Address not Matching\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"md-form\\\">\\r\\n            <label for=\\\"inputMDEx\\\">Date Of Birth</label>\\r\\n            <input type=\\\"date\\\" id=\\\"inputMDEx\\\" class=\\\"form-control\\\" name=\\\"DateOfBirth\\\" placeholder=\\\"Mother Toung\\\"\\r\\n              [(ngModel)]=\\\"selectedEmployee.DateOfBirth\\\" #DateOfBirth=\\\"ngModel\\\" required>\\r\\n            <div style=\\\"text-align: left;\\\"\\r\\n              *ngIf=\\\"DateOfBirth.errors?.pattern || (DateOfBirth.errors && (DateOfBirth.dirty || DateOfBirth.touched))\\\"\\r\\n              class=\\\"text-danger\\\">\\r\\n              Birth date Required\\r\\n            </div>\\r\\n            <span class=\\\"md-line\\\"></span>\\r\\n          </div> -->\\r\\n          <form class=\\\"form-inline\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Date of Birth\\\"\\r\\n                         name=\\\"dp\\\" [(ngModel)]=\\\"model\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\">\\r\\n                  <div class=\\\"input-group-append\\\">\\r\\n                    <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d.toggle()\\\" type=\\\"button\\\"><i style=\\\"font-size:24px\\\" class=\\\"fa\\\">&#xf073;</i></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          <div class=\\\"mt-3\\\"></div>\\r\\n          <font size=\\\"4\\\">Gender:</font>\\r\\n          <div class=\\\"form-radio\\\">\\r\\n            <form>\\r\\n              <div class=\\\"radio radio-inline\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"radio\\\" name=\\\"options\\\" [(ngModel)]=\\\"selectedEmployee.Gender\\\" value=\\\"Male\\\">\\r\\n                  <i class=\\\"helper\\\"></i>Male\\r\\n                </label>\\r\\n              </div>\\r\\n              <div class=\\\"radio radio-inline\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"radio\\\" name=\\\"options\\\" [(ngModel)]=\\\"selectedEmployee.Gender\\\" value=\\\"Female\\\">\\r\\n                  <i class=\\\"helper\\\"></i>Female\\r\\n                </label>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <!-- split pages end -->\\r\\n      <div class=\\\"col-sm-6 mobile-inputs\\\">\\r\\n        <form #manageEmployeeForm=\\\"ngForm\\\">\\r\\n          <h4 class=\\\"sub-title\\\">\\r\\n            <font size=\\\"4\\\">Others</font>\\r\\n          </h4>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"bloodgroup\\\" placeholder=\\\"Blood Group\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.BloodGroup\\\" #BloodGroup=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"BloodGroup.errors?.pattern || (BloodGroup.errors && (BloodGroup.dirty || BloodGroup.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n                BloodGroup Reuired\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Nationality\\\" placeholder=\\\"Nationality\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.Nationality\\\" #Nationality=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"Nationality.errors?.pattern || (Nationality.errors && (Nationality.dirty || Nationality.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n              Enter Nationality\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"MotherTounge\\\" placeholder=\\\"Mother Toung\\\"\\r\\n                [(ngModel)]=\\\"selectedEmployee.MotherTounge\\\" #MotherTounge=\\\"ngModel\\\" required>\\r\\n              <div style=\\\"text-align: left;\\\"\\r\\n                *ngIf=\\\"MotherTounge.errors?.pattern || (MotherTounge.errors && (MotherTounge.dirty || MotherTounge.touched))\\\"\\r\\n                class=\\\"text-danger\\\">\\r\\n              MotherTounge Required\\r\\n              </div>\\r\\n              <span class=\\\"md-line\\\"></span>\\r\\n            </div>\\r\\n          </div>\\r\\n          <font size=\\\"4\\\">Login Access</font> <br>\\r\\n          <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"selectedEmployee.LoginAccess\\\"\\r\\n            #LoginAccess=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required></ui-switch>\\r\\n            : Un-Check this if you want to disable login for this employee\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <font size=\\\"4\\\">Control Access</font>\\r\\n          </div>\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col-sm-12\\\">\\r\\n              <select name=\\\"select\\\" class=\\\"form-control form-control-default\\\">\\r\\n                <option value=\\\"opt1\\\">Choose Profile</option>\\r\\n                <option value=\\\"opt2\\\">Type 2</option>\\r\\n                <option value=\\\"opt3\\\">Type 3</option>\\r\\n                <option value=\\\"opt4\\\">Type 4</option>\\r\\n                <option value=\\\"opt5\\\">Type 5</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-4\\\">\\r\\n            <h6>Organisation Sub-Division Access</h6>\\r\\n            <font size=\\\"3\\\">If none of the sub-divisions is selected employees has full access to all the sub-divisions\\r\\n            </font>\\r\\n          </div>\\r\\n          <!-- Multi Select for Sub-Division Access Start -->\\r\\n          <div class=\\\"mt-3\\\">\\r\\n                <div class=\\\"col-sm-14\\\">\\r\\n                  <angular2-multiselect name=\\\"dropdown\\\" [data]=\\\"InstitutionList\\\" [(ngModel)]=\\\"selectedInstitutions\\\"\\r\\n                    [settings]=\\\"dropdownSettings\\\" (onSelect)=\\\"onItemSelect($event)\\\"\\r\\n                    (onDeSelect)=\\\"OnItemDeSelect($event,user)\\\" (onSelectAll)=\\\"onSelectAll($event)\\\"\\r\\n                    (onDeSelectAll)=\\\"onDeSelectAll($event)\\\">\\r\\n                  </angular2-multiselect>\\r\\n              </div>\\r\\n              <div class=\\\"mt-3\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          <!-- Multi Select For Sub-Division Access End -->\\r\\n\\r\\n          <!-- <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\"\\r\\n                  [(ngModel)]=\\\"selectedEmployee.montessoriSchool\\\" #montessoriSchool=\\\"ngModel\\\"\\r\\n                  [ngModelOptions]=\\\"{standalone: true}\\\" required></ui-switch>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"selectedEmployee.primarySchool\\\"\\r\\n                  #primarySchool=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required></ui-switch>\\r\\n              </div>: St. Xavier's Primary School\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"selectedEmployee.higherSchool\\\"\\r\\n                  #higherSchool=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\r\\n                </ui-switch>\\r\\n              </div>: St. Xavier's Higher Pri. School\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\"\\r\\n                  [(ngModel)]=\\\"selectedEmployee.secondarySchool\\\" #secondarySchool=\\\"ngModel\\\"\\r\\n                  [ngModelOptions]=\\\"{standalone: true}\\\" required>\\r\\n                </ui-switch>\\r\\n              </div>: St. Xavier's Secondary School\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"selectedEmployee.pu\\\"\\r\\n                  #pu=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required></ui-switch>\\r\\n              </div>: St. Xavier's PU\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"selectedEmployee.brv\\\"\\r\\n                  #brv=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required></ui-switch>\\r\\n              </div>: BRV Public School\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mt-3\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-auto\\\">\\r\\n                <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"selectedEmployee.rainbow\\\"\\r\\n                  #rainbow=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required></ui-switch>\\r\\n              </div>: Rainbow International School\\r\\n            </div>\\r\\n          </div> -->\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"mt-3\\\">\\r\\n        <div style=\\\"text-align:center;\\\">\\r\\n          <button id=\\\"UpdateEmployeeButton\\\"\\r\\n          (click)=\\\"UpdateEmployee('custom-modal-2')\\\" type=\\\"submit\\\"\\r\\n            data-dismiss=\\\"modal\\\" class=\\\"btn btn-primary\\\">\\r\\n            {{modalButtonText}}</button> &nbsp;&nbsp;&nbsp;\\r\\n          <button id=\\\"closeemployeepopUp\\\"\\r\\n          class=\\\"btn btn-default waves-effect\\\"\\r\\n            (click)=\\\"closeModal('custom-modal-2')\\\">Close</button>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</jw-modal>\\r\\n\"","module.exports = \"\"","import { Institute } from './../../layout/admin/institute';\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\r\nimport { CustomValidators } from 'ng2-validation';\r\nimport { ManageEmployeesService } from 'src/app/service/manage-employees.service';\r\nimport { Employee } from './Employee';\r\nimport set = Reflect.set;\r\nimport { Router } from '@angular/router';\r\nimport { ModalService } from 'src/app/service/modal.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { InstituteService } from 'src/app/service/institute.service';\r\nimport { Institution } from 'src/app/theme/simple-page/Institution';\r\nimport { ITreeOptions, IActionMapping } from 'angular-tree-component';\r\n\r\n@Component({\r\n  selector: 'app-manage-employees',\r\n  templateUrl: './manage-employees.component.html',\r\n  styleUrls: ['./manage-employees.component.scss'],\r\n  providers: [ManageEmployeesService, ModalService]\r\n})\r\nexport class ManageEmployeesComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('tree') tree;\r\n  myForm: FormGroup;\r\n  modalName = 'Create New Employee';\r\n  modalButtonText = 'Create';\r\n  bodyText: string;\r\n  employees: Employee[] = Array();\r\n  selectedEmployee = new Employee();\r\n  male: boolean;\r\n  female: boolean;\r\n  formBusy: boolean;\r\n\r\n  InstitutionList: Institution[] = Array();\r\n  selectedInstitutions = [];\r\n  selectedItems = [];\r\n  dropdownSettings = {};\r\n  dropdownList = [];\r\n  users = [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }];\r\n  data2 = [];\r\n  selectedTreeList: string[];\r\n\r\n  InstituteGroup = {\r\n    Id: '',\r\n    Name: '',\r\n    Address: '',\r\n    City: '',\r\n    District: '',\r\n    Pincode: '',\r\n    UploadFile: '',\r\n    State: '',\r\n    Country: '',\r\n    Contact: '',\r\n    Phone1: '',\r\n    Phone2: '',\r\n  };\r\n  paramData = {\r\n    Id: '',\r\n  };\r\n  data: Institution[] = Array();\r\n\r\n  constructor(private _router: Router,\r\n    private modalService: ModalService,\r\n    private _getEmployees: ManageEmployeesService, private _getEmployee: ManageEmployeesService,\r\n    private _updateEmployee: ManageEmployeesService, private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private _institute: InstituteService) { }\r\n\r\n  ngOnInit() {\r\n    this.getallEmployeesDetails();\r\n    this.getInstitutionGroupDetails();\r\n    this.dropdownSettings = {\r\n      text: 'Select Sub-Divisions',\r\n      selectAllText: 'Select All',\r\n      unSelectAllText: 'UnSelect All',\r\n      classes: 'myclass custom-class',\r\n      primaryKey: 'Id',\r\n      labelKey: 'Name',\r\n      enableSearchFilter: false,\r\n      searchBy: ['Name']\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.tree.treeModel.expandAll();\r\n  }\r\n\r\n  ExpandTree() {\r\n    this.tree.treeModel.expandAll();\r\n  }\r\n\r\n  \r\n\r\n  openModal(id: string) {\r\n    this.modalService.open(id);\r\n  }\r\n  closeModal(id: string) {\r\n    this.modalService.close(id);\r\n  }\r\n  openNewEmpModal(id: string) {\r\n    this.modalName = 'Create New Employee';\r\n    this.modalButtonText = 'Create';\r\n    this.InitEmployeeModel();\r\n    this.openModal(id);\r\n  }\r\n\r\n  getallEmployeesDetails() {\r\n    console.log();\r\n    this.spinner.show();\r\n    this._getEmployees.getallEmployeesDetails()\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          console.log('Success!!');\r\n          this.employees = data.data[0];\r\n          // console.log(this.employees);\r\n          this.spinner.hide();\r\n        } else {\r\n          this.toastr.error(data.message, 'Opps!');\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n  getInstitutionGroupDetails() {\r\n    this.paramData.Id = JSON.parse(localStorage.getItem('InstitutionGroupId'));\r\n    this._institute.getInstitutionGroupdetailsService(this.paramData)\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.InstitutionList = data.institutions;\r\n          this.data = data.institutions;\r\n          //this.data2 = data;\r\n        }\r\n      });\r\n  }\r\n\r\n  UpdateEmployee(event) {\r\n    console.log('in Updateemployee');\r\n    this.spinner.show();\r\n    this._updateEmployee.updateEmployee(this.selectedEmployee)\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.spinner.hide();\r\n          this.getallEmployeesDetails();\r\n          this.toastr.success('Successfully ' + this.modalButtonText + 'd Employee!', 'Success');\r\n          this.InitEmployeeModel();\r\n          this.closeModal(event);\r\n        } else {\r\n          this.spinner.hide();\r\n          this.toastr.error(data.message, 'Opps!');\r\n        }\r\n      });\r\n  }\r\n\r\n  // Toggle the buttons\r\n  // Update the title\r\n\r\n  InitEmployeeModel() {\r\n    this.selectedEmployee = new Employee();\r\n    this.selectedEmployee.InstitutionBranchId = JSON.parse(localStorage.getItem('InstitutionGroupId'));\r\n    this.selectedEmployee.UserTypeId = 1;\r\n  }\r\n\r\n\r\n  onCustomAction(event) {\r\n    if (event.action === 'editrecord') {\r\n      this.selectedEmployee = event.data;\r\n      this.modalName = 'Update Employee';\r\n      this.modalButtonText = 'Update';\r\n      this.openModal('custom-modal-2');\r\n    }\r\n  }\r\n\r\n\r\n  // tslint:disable-next-line: member-ordering\r\n  settings = {\r\n    actions: {\r\n      columnTitle: 'Actions',\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      custom: [\r\n        { name: 'editrecord', title: '<i class=\"fa fa-edit\"></i>' },\r\n        // { name: 'viewrecord', title: '&nbsp;&nbsp;<i class=\"fa fa-minus\"></i>' }\r\n      ],\r\n      // position: 'right'\r\n    },\r\n    delete: {\r\n      confirmDelete: true,\r\n      deleteButtonContent: '<i class=\"fa  fa-trash\"></i>',\r\n      saveButtonContent: 'save',\r\n      cancelButtonContent: 'cancel',\r\n    },\r\n    columns: {\r\n      Name: {\r\n        title: 'Name',\r\n      },\r\n      UserName: {\r\n        title: 'User Name',\r\n      },\r\n      EmpCode: {\r\n        title: 'Employee Code',\r\n      },\r\n    },\r\n  };\r\n}\r\n","import { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { SharedModule } from './../../shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ManageEmployeesComponent } from './manage-employees.component';\r\nimport { ManageEmployeesRoutingModule } from './manage-employees-routing.module';\r\nimport { UiSwitchModule } from 'ng2-ui-switch';\r\nimport { ModalSharedModule } from 'src/app/shared/modal/ModalShared.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\nimport { TreeModule} from 'angular-tree-component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ManageEmployeesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UiSwitchModule,\r\n    SharedModule,\r\n    Ng2SmartTableModule,\r\n    ModalSharedModule,\r\n    NgxSpinnerModule,\r\n    AngularMultiSelectModule, TreeModule\r\n\r\n\r\n  ],\r\n  declarations: [ManageEmployeesComponent  ]\r\n})\r\nexport class ManageEmployeesModule { }\r\n","﻿import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        let modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        let modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.close();\r\n    }\r\n}","import { ModalComponent } from \"./modal.component\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({\r\n    declarations: [ ModalComponent ],\r\n    exports: [ ModalComponent ]\r\n  })\r\n export class ModalSharedModule {}","﻿import { Component, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalService } from '../../service/modal.service';\r\n// https://jasonwatmore.com/post/2019/04/16/angular-7-custom-modal-window-dialog-box\r\n// https://github.com/cornflourblue/angular-7-custom-modal\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'jw-modal',\r\n    template:\r\n        `<div class=\"jw-modal\">\r\n            <div class=\"jw-modal-body\">\r\n                <ng-content></ng-content>\r\n            </div>\r\n        </div>\r\n        <div class=\"jw-modal-background\"></div>`\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const modal = this;\r\n\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', function (e: any) {\r\n            if (e.target.className === 'jw-modal') {\r\n                modal.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jw-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jw-modal-open');\r\n    }\r\n}\r\n"],"sourceRoot":""}