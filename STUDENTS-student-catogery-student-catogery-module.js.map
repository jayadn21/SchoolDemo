{"version":3,"sources":["webpack:///./src/app/STUDENTS/student-catogery/student-catogery.component.html","webpack:///./src/app/STUDENTS/student-catogery/student-catogery.component.scss","webpack:///./src/app/STUDENTS/student-catogery/student-catogery.component.ts","webpack:///./src/app/STUDENTS/student-catogery/student-catogery.module.ts","webpack:///./src/app/STUDENTS/student-catogery/student-catogery.routing.module.ts","webpack:///./src/app/service/student-catogery.service.ts","webpack:///./src/app/shared/Models/Studentcatogery.ts"],"names":[],"mappings":"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","file":"STUDENTS-student-catogery-student-catogery-module.js","sourcesContent":["module.exports = \"<p>\\r\\n  student-catogery works!\\r\\n</p>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <app-card>\\r\\n      <div class=\\\"mt-3\\\">\\r\\n        <h5>Student Catogery</h5>\\r\\n        <hr>\\r\\n      </div>\\r\\n      <div style=\\\"text-align: center\\\">\\r\\n        <div class=\\\"mt-3\\\">\\r\\n          <div class=\\\"col-xl-12\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"Studentcatogery.Name\\\" #Name=\\\"ngModel\\\"\\r\\n              required>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"saveStudentCatogery\\\" (click)=\\\"saveStudentCatogery()\\\"\\r\\n          (click)=\\\"cleardata()\\\" type=\\\"submit\\\">{{Buttontext}}</button>\\r\\n        &nbsp;&nbsp;&nbsp; &nbsp;\\r\\n      </div>\\r\\n    </app-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <app-card title=\\\"StudentCatogery\\\">\\r\\n      <div class=\\\"mt-3\\\">\\r\\n        <h5>Student Catogery</h5>\\r\\n        <hr>\\r\\n      </div>\\r\\n      <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"studentCatogery\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"\\r\\n        (editConfirm)=\\\"onSaveConfirm($event)\\\" (createConfirm)=\\\"onCreateConfirm($event)\\\"\\r\\n        (custom)=\\\"onCustomAction($event)\\\">\\r\\n      </ng2-smart-table>\\r\\n    </app-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { StudentCatogery } from 'src/app/shared/Models/Studentcatogery';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { StudentCatogeryService } from 'src/app/service/student-catogery.service';\r\n\r\n@Component({\r\n  selector: 'app-student-catogery',\r\n  templateUrl: './student-catogery.component.html',\r\n  styleUrls: ['./student-catogery.component.scss']\r\n})\r\nexport class StudentCatogeryComponent implements OnInit {\r\n\r\n  constructor(private spinner: NgxSpinnerService, private toastr: ToastrService,\r\n    private studentCatogeryAPI: StudentCatogeryService) { }\r\n\r\n  Buttontext = 'Submit';\r\n  Headingtext = 'Add Student Catogery';\r\n  studentCatogery: StudentCatogery[] = Array();\r\n  Studentcatogery = new StudentCatogery();\r\n\r\n  ngOnInit() {\r\n    this.getadmissionCategorys();\r\n  }\r\n  getadmissionCategorys() {\r\n    this.spinner.show();\r\n    this.studentCatogeryAPI.getadmissionCategorys()\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.studentCatogery = data.data[0];\r\n          this.spinner.hide();\r\n        } else {\r\n          this.toastr.error(data.message, 'Opps!');\r\n        }\r\n      });\r\n  }\r\n  saveStudentCatogery() {\r\n    this.spinner.show();\r\n    this.studentCatogeryAPI.setAdmissionCategory(this.Studentcatogery)\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.toastr.success('successfully' + this.Headingtext + '!', 'Success');\r\n          this.getadmissionCategorys();\r\n          this.cleardata();\r\n        } else {\r\n          this.toastr.error(data.message, 'server error!!');\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateAssessment() {\r\n    this.spinner.show();\r\n    this.Buttontext = 'Update';\r\n    this.studentCatogeryAPI.setAdmissionCategory(this.Studentcatogery)\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.toastr.success('Successfully ' + 'Updated Student Catogery', 'Success');\r\n          this.spinner.hide();\r\n        } else {\r\n          this.toastr.error(data.message, 'Opps!');\r\n        }\r\n      });\r\n  }\r\n\r\n  cleardata() {\r\n    this.Studentcatogery = new StudentCatogery;\r\n  }\r\n\r\n  onCustomAction(event) {\r\n    console.log(event.data);\r\n    if (event.action === 'editrecord') {\r\n      this.Studentcatogery = event.data;\r\n      this.Buttontext = 'Update';\r\n      this.Headingtext = 'Update StudentCatogery';\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line: member-ordering\r\n  settings = {\r\n    delete: {\r\n      confirmDelete: true,\r\n      deleteButtonContent: '<i class=\"fa fa-trash\"></i>',\r\n      saveButtonContent: 'save',\r\n      cancelButtonContent: 'cancel'\r\n    },\r\n    add: {\r\n      confirmCreate: true,\r\n    },\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: true,\r\n      custom: [\r\n        { name: 'editrecord', title: '<i class=\"fa fa-edit\"></i>' },\r\n      ],\r\n    },\r\n    columns: {\r\n      Id: {\r\n        title: 'Id',\r\n      },\r\n      Name: {\r\n        title: 'Name',\r\n      },\r\n    },\r\n  };\r\n\r\n  onDeleteConfirm(event) {\r\n    console.log('Delete Event In Console');\r\n    console.log(event);\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n\r\n  onCreateConfirm(event) {\r\n    console.log('Create Event In Console');\r\n    console.log(event);\r\n  }\r\n\r\n  onSaveConfirm(event) {\r\n    console.log('Edit Event In Console');\r\n    console.log(event);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StudentCatogeryRoutingModule } from './student-catogery.routing.module';\r\nimport { StudentCatogeryComponent } from './student-catogery.component';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StudentCatogeryRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2SmartTableModule\r\n  ],\r\n  declarations: [StudentCatogeryComponent]\r\n})\r\nexport class StudentCatogeryModule { }\r\n","import { NgModule} from '@angular/core';\r\nimport { RouterModule, Routes} from '@angular/router';\r\nimport { StudentCatogeryComponent } from './student-catogery.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: StudentCatogeryComponent,\r\n    data: {\r\n      title: 'Mark Attendance',\r\n      status: true\r\n    },\r\n    },\r\n\r\n ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StudentCatogeryRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceUitility } from './ServiceUitility';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentCatogeryService {\r\n\r\n  private route = '/StudentCatogeries';\r\n  private _getAdmissionCategorys = this.route + '/getAdmissionCategorys';\r\n  private _getAdmissionCategory = this.route + '/getAdmissionCategory';\r\n  private _setAdmissionCategory = this.route + '/setAdmissionCategory';\r\n  private _delAdmissionCategory = this.route + '/delAdmissionCategory';\r\n\r\n    constructor(private serviceUitility: ServiceUitility) { }\r\n\r\n    getadmissionCategorys() {\r\n      return this.serviceUitility.postRequest(this._getAdmissionCategorys, '');\r\n    }\r\n    getAdmissionCategory() {\r\n      return this.serviceUitility.postRequest(this._getAdmissionCategory, '');\r\n    }\r\n\r\n    setAdmissionCategory(obj) {\r\n      return this.serviceUitility.postRequest(this._setAdmissionCategory, obj);\r\n    }\r\n    delAdmissionCategory(obj) {\r\n      return this.serviceUitility.postRequest(this._delAdmissionCategory, obj);\r\n    }\r\n  }\r\n\r\n\r\n","export class StudentCatogery {\r\n  Id: Number;\r\n  Name: String;\r\n\r\n  constructor () {\r\n      this.Id = -1;\r\n  }\r\n}\r\n"],"sourceRoot":""}