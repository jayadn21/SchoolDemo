{"version":3,"sources":["webpack:///./src/app/STUDENTS/custom-fields/custom-fields.component.html","webpack:///./src/app/STUDENTS/custom-fields/custom-fields.component.scss","webpack:///./src/app/STUDENTS/custom-fields/custom-fields.component.ts","webpack:///./src/app/STUDENTS/custom-fields/custom-fields.module.ts","webpack:///./src/app/STUDENTS/custom-fields/custom-fields.routing.module.ts","webpack:///./src/app/shared/Models/CustomField.ts"],"names":[],"mappings":"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","file":"STUDENTS-custom-fields-custom-fields-module.js","sourcesContent":["module.exports = \"<p>\\r\\n  custom-fields works!\\r\\n</p>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <app-card>\\r\\n      <div class=\\\"mt-3\\\">\\r\\n        <h5>Custom Field</h5>\\r\\n        <hr>\\r\\n      </div>\\r\\n      <div style=\\\"text-align: center\\\">\\r\\n        <div class=\\\"mt-3\\\">\\r\\n          <div class=\\\"col-xl-12\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Field Name\\\" [(ngModel)]=\\\"Customfield.Name\\\" #Name=\\\"ngModel\\\"\\r\\n              required>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: left\\\">\\r\\n        <div class=\\\"mt-3\\\">\\r\\n        <ui-switch color=\\\"#4680ff\\\" switchColor=\\\"#fff\\\" size=\\\"small\\\" [(ngModel)]=\\\"Customfield.ExportToExcel\\\" #Name=\\\"ngModel\\\"\\r\\n          required></ui-switch> <b> &nbsp;: Export this Field to Excel While Exporting</b>\\r\\n          </div>\\r\\n      </div>\\r\\n        <br>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"saveCustomField\\\" (click)=\\\"saveCustomField()\\\"\\r\\n          (click)=\\\"cleardata()\\\" type=\\\"submit\\\">{{Buttontext}}</button>\\r\\n        &nbsp;&nbsp;&nbsp; &nbsp;\\r\\n      </div>\\r\\n    </app-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <app-card title=\\\"CustomField\\\">\\r\\n      <div class=\\\"mt-3\\\">\\r\\n        <h5>Custom Field</h5>\\r\\n        <hr>\\r\\n      </div>\\r\\n      <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"customField\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"\\r\\n        (editConfirm)=\\\"onSaveConfirm($event)\\\" (createConfirm)=\\\"onCreateConfirm($event)\\\"\\r\\n        (custom)=\\\"onCustomAction($event)\\\">\\r\\n      </ng2-smart-table>\\r\\n    </app-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { CustomField } from 'src/app/shared/Models/CustomField';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomFieldsService } from 'src/app/service/custom-fields.service';\r\n\r\n@Component({\r\n  selector: 'app-custom-fields',\r\n  templateUrl: './custom-fields.component.html',\r\n  styleUrls: ['./custom-fields.component.scss']\r\n})\r\nexport class CustomFieldsComponent implements OnInit {\r\n\r\n  constructor(private spinner: NgxSpinnerService, private toastr: ToastrService, private _customFieldAPI: CustomFieldsService ) { }\r\n\r\n  Buttontext = 'Submit';\r\n  Headingtext = 'Add Custom Field';\r\n  customField: CustomField[] = Array();\r\n  Customfield = new CustomField();\r\n\r\n  ngOnInit() {\r\n    this.getCustomFields();\r\n  }\r\n\r\n  getCustomFields() {\r\n    this.spinner.show();\r\n    this._customFieldAPI.getCustomFields()\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.customField = data.data[0];\r\n          this.spinner.hide();\r\n        } else {\r\n          this.toastr.error(data.message, 'Opps!');\r\n        }\r\n      });\r\n  }\r\n\r\n  saveCustomField() {\r\n    this.spinner.show();\r\n    this._customFieldAPI.setCustomField(this.Customfield)\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.toastr.success('successfully' + this.Headingtext + '!', 'Success');\r\n          this.getCustomFields();\r\n          this.cleardata();\r\n        } else {\r\n          this.toastr.error(data.message, 'server error!!');\r\n        }\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  updateCustomField() {\r\n    this.spinner.show();\r\n    this.Buttontext = 'Update';\r\n    this._customFieldAPI.setCustomField(this.Customfield)\r\n      .subscribe(data => {\r\n        if (data.success) {\r\n          this.toastr.success('Successfully ' + 'Updated Custom field', 'Success');\r\n          this.spinner.hide();\r\n        } else {\r\n          this.toastr.error(data.message, 'Opps!');\r\n        }\r\n      });\r\n  }\r\n\r\n  cleardata() {\r\n    this.Customfield = new CustomField;\r\n  }\r\n\r\n  onCustomAction(event) {\r\n    console.log(event.data);\r\n    if (event.action === 'editrecord') {\r\n      this.Customfield = event.data;\r\n      this.Buttontext = 'Update';\r\n      this.Headingtext = 'Update Customfield';\r\n    }\r\n  }\r\n\r\n\r\n\r\n// tslint:disable-next-line: member-ordering\r\nsettings = {\r\n  delete: {\r\n    confirmDelete: true,\r\n    deleteButtonContent: '<i class=\"fa fa-trash\"></i>',\r\n    saveButtonContent: 'save',\r\n    cancelButtonContent: 'cancel'\r\n  },\r\n  add: {\r\n    confirmCreate: true,\r\n  },\r\n  actions: {\r\n    add: false,\r\n    edit: false,\r\n    delete: true,\r\n    custom: [\r\n      { name: 'editrecord', title: '<i class=\"fa fa-edit\"></i>' },\r\n    ],\r\n  },\r\n  columns: {\r\n    Id: {\r\n      title: 'Id',\r\n    },\r\n    Name: {\r\n      title: 'Name',\r\n    },\r\n  },\r\n};\r\n\r\nonDeleteConfirm(event) {\r\n  console.log('Delete Event In Console');\r\n  console.log(event);\r\n  if (window.confirm('Are you sure you want to delete?')) {\r\n    event.confirm.resolve();\r\n  } else {\r\n    event.confirm.reject();\r\n  }\r\n}\r\n\r\nonCreateConfirm(event) {\r\n  console.log('Create Event In Console');\r\n  console.log(event);\r\n}\r\n\r\nonSaveConfirm(event) {\r\n  console.log('Edit Event In Console');\r\n  console.log(event);\r\n}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CustomFieldsComponent } from './custom-fields.component';\r\nimport { CustomFieldsRoutingModule } from './custom-fields.routing.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { UiSwitchModule } from 'ng2-ui-switch';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CustomFieldsRoutingModule,\r\n    SharedModule,\r\n    NgxSpinnerModule,\r\n    FormsModule,\r\n    UiSwitchModule,\r\n    ReactiveFormsModule,\r\n    Ng2SmartTableModule\r\n  ],\r\n  declarations: [CustomFieldsComponent]\r\n})\r\nexport class CustomFieldsModule { }\r\n","import { NgModule} from '@angular/core';\r\nimport { RouterModule, Routes} from '@angular/router';\r\nimport { CustomFieldsComponent } from './custom-fields.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    component: CustomFieldsComponent,\r\n    data: {\r\n      title: 'Mark Attendance',\r\n      status: true\r\n    },\r\n    },\r\n\r\n ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomFieldsRoutingModule {}\r\n","export class CustomField {\r\n  Id: Number;\r\n  Name: String;\r\n  ExportToExcel: boolean;\r\n  FieldValue: String;\r\n\r\n  constructor () {\r\n      this.Id = -1;\r\n  }\r\n}\r\n"],"sourceRoot":""}