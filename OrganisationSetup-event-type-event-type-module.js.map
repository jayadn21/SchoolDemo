{"version":3,"sources":["webpack:///./src/app/OrganisationSetup/event-type/event-type.component.html","webpack:///./src/app/OrganisationSetup/event-type/event-type.component.scss","webpack:///./src/app/OrganisationSetup/event-type/event-type.component.ts","webpack:///./src/app/OrganisationSetup/event-type/event-type.module.ts","webpack:///./src/app/OrganisationSetup/event-type/event-type.routing.module.ts","webpack:///./src/app/service/event-type.service.ts","webpack:///./src/app/shared/Models/EventType.ts"],"names":[],"mappings":"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","file":"OrganisationSetup-event-type-event-type-module.js","sourcesContent":["module.exports = \"<ngx-spinner type=\\\"ball-clip-rotate-pulse\\\"></ngx-spinner>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <app-card title=\\\"EventType\\\" [classHeader]=\\\"true\\\">\\r\\n      <div style=\\\"text-align: center\\\">\\r\\n        <h5>{{Headingtext}}</h5>\\r\\n        <br>\\r\\n        <div>\\r\\n          Event Name\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"Event Type\\\" [(ngModel)]=\\\"Eventtype.Name\\\" #Name=\\\"ngModel\\\"\\r\\n          placeholder=\\\"Event Name\\\" required>\\r\\n        </div>&nbsp;\\r\\n        <div>\\r\\n          <label class=\\\"col-sm-2 col-form-label\\\">Color</label>\\r\\n           <input type=\\\"color\\\" [(ngModel)]=\\\"Eventtype.Color\\\" />\\r\\n          <div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Eventtype.Color\\\" />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div><br>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"saveEventType\\\" (click)=\\\"saveEventType()\\\"\\r\\n            type=\\\"submit\\\">{{Buttontext}}</button>\\r\\n          &nbsp;\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"cleardata()\\\">Cancel</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </app-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-6\\\">\\r\\n    <app-card title=\\\"Feesaccountlist\\\" [classHeader]=\\\"true\\\">\\r\\n      <h5>Event Type</h5>\\r\\n      <hr>\\r\\n      <!-- <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"eventType\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"\\r\\n        (editConfirm)=\\\"onSaveConfirm($event)\\\" (createConfirm)=\\\"onCreateConfirm($event)\\\"\\r\\n        (custom)=\\\"onCustomAction($event)\\\">\\r\\n      </ng2-smart-table> -->\\r\\n      <table class=\\\"table table-bordered table-responsive-md table-striped text-center\\\">\\r\\n        <tr>\\r\\n          <th class=\\\"text-center\\\">Name</th>\\r\\n          <th class=\\\"text-center\\\">Color</th>\\r\\n          <th style=\\\"width:100px\\\">Edit</th>\\r\\n          <th style=\\\"width:100px\\\">Delete</th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let et of eventType\\\">\\r\\n          <td>\\r\\n            <span>{{et.Name}}</span>\\r\\n          </td>\\r\\n          <td [ngStyle]=\\\"{'background-color':et.Color}\\\">\\r\\n            <span>{{et.Color}}</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onEdit(et)\\\">Edit</button>\\r\\n          </td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteConfirm(et)\\\">Delete</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </app-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"@media all and (min-width: 768px) {\\n  tr td {\\n    vertical-align: middle !important; }\\n  tr span:not([class]) {\\n    padding: 1rem 1rem; } }\\n\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { EventTypeService } from 'src/app/service/event-type.service';\r\nimport {ColorPickerService, Rgba} from 'ngx-color-picker';\r\nimport { EventType } from 'src/app/shared/Models/EventType';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Component({\r\n  selector: 'app-event-type',\r\n  templateUrl: './event-type.component.html',\r\n  styleUrls: ['./event-type.component.scss']\r\n})\r\nexport class EventTypeComponent implements OnInit {\r\n  constructor(private _eventType: EventTypeService, public cpService: ColorPickerService,\r\n    private spinner: NgxSpinnerService, private toastr: ToastrService) {\r\n   }\r\n\r\n   Buttontext = 'Create';\r\n   Headingtext = 'Create Event Type';\r\n   ColorPicker = '';\r\n   eventType: EventType [] = Array();\r\n   Eventtype = new EventType();\r\n\r\n\r\n  ngOnInit() {\r\n    this. getEventTypes();\r\n  }\r\n\r\n  getEventTypes() {\r\n    console.log('Event Type');\r\n    this.spinner.show();\r\n    this._eventType.getEventTypes()\r\n    .subscribe(data => {\r\n      if (data.success) {\r\n        console.log('Success from Accounting year!!');\r\n        this.eventType = data.data[0];\r\n        console.log(this.eventType);\r\n        this.spinner.hide();\r\n      } else {\r\n        this.toastr.error(data.message, 'Opps!');\r\n      }\r\n      });\r\n  }\r\n  saveEventType() {\r\n    console.log('EventType' + this.Eventtype.Id);\r\n    this.spinner.show();\r\n    this._eventType.setEventType(this.Eventtype)\r\n    .subscribe(data => {\r\n      if  (data.success) {\r\n      this.spinner.hide();\r\n      this.toastr.success('Successfully ' + this.Buttontext + 'd!', 'Success');\r\n      this.getEventTypes();\r\n      this.cleardata();\r\n      } else {\r\n        this.toastr.error(data.message, 'server error!!');\r\n      }\r\n    });\r\n  }\r\n\r\n  onEdit(event) {\r\n    console.log(event);\r\n    // if (event.action === 'editrecord') {\r\n      this.Eventtype = event;\r\n      this.Buttontext = 'Update';\r\n      this.Headingtext = 'Update Event Type';\r\n    // }\r\n  }\r\n\r\n  cleardata() {\r\n    this.Eventtype = new EventType;\r\n    this.Buttontext = 'Create';\r\n    this.Headingtext = 'Create Event Type';\r\n }\r\n\r\n  ColorPick() {\r\n    this.ColorPicker = 'ColorPicker';\r\n  }\r\n\r\n  onDeleteConfirm(event) {\r\n    console.log('Delete Event In Console');\r\n    console.log(event);\r\n    this.Eventtype = event;\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      console.log('EventType' + this.Eventtype.Id);\r\n      this.spinner.show();\r\n      this._eventType.delEventType(this.Eventtype)\r\n      .subscribe(data => {\r\n        if  (data.success) {\r\n        this.spinner.hide();\r\n        this.toastr.success('Successfully deleted!', 'Success');\r\n        this.getEventTypes();\r\n        this.cleardata();\r\n        } else {\r\n          this.toastr.error(data.message, 'server error!!');\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EventTypeComponent } from './event-type.component';\r\nimport { EventTypeRoutingModule } from './event-type.routing.module';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    EventTypeRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ColorPickerModule,\r\n    Ng2SmartTableModule,\r\n    NgxSpinnerModule,\r\n\r\n  ],\r\n  declarations: [EventTypeComponent,\r\n  ]\r\n})\r\nexport class EventTypeModule { }\r\n","import { Title } from '@angular/platform-browser';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { EventTypeComponent } from './event-type.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EventTypeComponent,\r\n        data: {\r\n            title: 'User profile',\r\n            status: true\r\n        }\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class EventTypeRoutingModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ServiceUitility } from './ServiceUitility';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventTypeService {\r\nprivate route = '/EventType';\r\nprivate _getEventTypes = this.route + '/getEventTypes';\r\nprivate _getEventType = this.route + '/getEventType';\r\nprivate _setEventType = this.route + '/setEventType';\r\nprivate _delEventType = this.route + '/delEventType';\r\n\r\n  constructor(private serviceUitility: ServiceUitility) { }\r\n\r\n  getEventTypes() {\r\n    return this.serviceUitility.postRequest(this._getEventTypes, '');\r\n  }\r\n\r\n  getEventType() {\r\n    return this.serviceUitility.postRequest(this._getEventType, '');\r\n  }\r\n\r\n  setEventType(obj) {\r\n    return this.serviceUitility.postRequest(this._setEventType, obj);\r\n  }\r\n  delEventType(obj) {\r\n    return this.serviceUitility.postRequest(this._delEventType, obj);\r\n  }\r\n\r\n}\r\n","export class EventType {\r\n  Id: Number;\r\n  Name: string;\r\n  Color: string;\r\n\r\n  constructor ( ) {\r\n      this.Id = -1;\r\n      this.Color=\"#000000\";\r\n  }\r\n}\r\n"],"sourceRoot":""}