{"version":3,"sources":["webpack:///./src/app/OrganisationSetup/subject-combination/subject-combination.component.html","webpack:///./src/app/OrganisationSetup/subject-combination/subject-combination.component.scss","webpack:///./src/app/OrganisationSetup/subject-combination/subject-combination.component.ts","webpack:///./src/app/OrganisationSetup/subject-combination/subject-combination.module.ts","webpack:///./src/app/OrganisationSetup/subject-combination/subject-combination.routing.module.ts","webpack:///./src/app/service/modal.service.ts","webpack:///./src/app/shared/Models/SubjectCombination.ts","webpack:///./src/app/shared/modal/ModalShared.module.ts","webpack:///./src/app/shared/modal/modal.component.ts"],"names":[],"mappings":"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","file":"OrganisationSetup-subject-combination-subject-combination-module.js","sourcesContent":["module.exports = \"<ngx-spinner type=\\\"ball-clip-rotate-pulse\\\"></ngx-spinner>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <app-card>\\r\\n          <div style=\\\"text-align: center\\\">\\r\\n              <h5>{{Headingtext}}</h5>\\r\\n              <br>\\r\\n              <input type=\\\"text\\\" name=\\\"Name\\\"  placeholder=\\\"Subject Name\\\"\\r\\n              [(ngModel)]=\\\"SubjectCombination.Name\\\"  #Name=\\\"ngModel\\\" required>\\r\\n              <br>\\r\\n              <br>\\r\\n              <br>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n              id=\\\"saveSubjectCombination\\\"\\r\\n              (click)=\\\"saveSubjectCombination()\\\"\\r\\n              (click)= \\\"cleardata()\\\" type=\\\"submit\\\" >{{Buttontext}}</button>\\r\\n              &nbsp;\\r\\n              &nbsp;\\r\\n              &nbsp;\\r\\n              &nbsp;\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"\\r\\n              (click)= \\\"cleardata()\\\">Cancel</button>\\r\\n              </div>\\r\\n\\r\\n      </app-card>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <app-card title=\\\"SubjectCombinationlist\\\" [classHeader]=\\\"true\\\">\\r\\n          <h5>Subject Combination</h5>\\r\\n          <hr>\\r\\n\\r\\n          <ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"subjectCombinationGrid\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"\\r\\n         (editConfirm)=\\\"onSaveConfirm($event)\\\"\\r\\n         (createConfirm)=\\\"onCreateConfirm($event)\\\"\\r\\n         (custom)=\\\"onCustomAction($event)\\\">\\r\\n\\r\\n        </ng2-smart-table>\\r\\n      </app-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { SubjectCombinationService } from 'src/app/service/subject-combination.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { SubjectCombination } from 'src/app/shared/Models/SubjectCombination';\r\n\r\n@Component({\r\n  selector: 'app-subject-combination',\r\n  templateUrl: './subject-combination.component.html',\r\n  styleUrls: ['./subject-combination.component.scss']\r\n})\r\nexport class SubjectCombinationComponent implements OnInit {\r\n\r\n  Buttontext = 'Create';\r\n  Headingtext = 'Add Subject Combination';\r\n  subjectCombinationGrid: SubjectCombination [] = Array();\r\n  SubjectCombination = new SubjectCombination();\r\n\r\n  constructor(private spinner: NgxSpinnerService,\r\n    private toastr: ToastrService,\r\n    private subjectCombination: SubjectCombinationService) { }\r\n\r\n  ngOnInit() {\r\n    this.getsubjectCombination();\r\n  }\r\n\r\n  getsubjectCombination() {\r\n    console.log('This is Subject');\r\n    this.spinner.show();\r\n    this.subjectCombination.getsubjectCombinations()\r\n    .subscribe(data => {\r\n      if (data.success) {\r\n        console.log('Success Subject Combination!!');\r\n        this.subjectCombinationGrid = data.data[0];\r\n        console.log(this.subjectCombinationGrid);\r\n        this.spinner.hide();\r\n      } else {\r\n        this.toastr.error(data.message, 'Opps!');\r\n      }\r\n      });\r\n  }\r\n  saveSubjectCombination() {\r\n     this.spinner.show();\r\n    this.subjectCombination.setsubjectCombination(this.SubjectCombination)\r\n    .subscribe(data => {\r\n      if  (data.success) {\r\n      this.spinner.hide();\r\n      this.toastr.success('successfully' + this.Headingtext + '!', 'Success');\r\n      console.log('Subject Combination Added');\r\n      this.getsubjectCombination();\r\n      this.cleardata();\r\n      } else {\r\n        this.toastr.error(data.message, 'server error!!');\r\n      }\r\n    });\r\n  }\r\n\r\n  cleardata() {\r\n    this.SubjectCombination = new SubjectCombination;\r\n }\r\n\r\n updatefeesaccount() {\r\n  this.spinner.show();\r\n  console.log('Subject Combnation' + this.SubjectCombination.Name);\r\n  this.Buttontext = 'Update';\r\n  this.subjectCombination.setsubjectCombination(this.SubjectCombination)\r\n  .subscribe(data => {\r\n    if (data.success) {\r\n     this.toastr.success('Successfully ' +  'Updated Fees Account!!', 'Success');\r\n     this.spinner.hide();\r\n    } else {\r\n      this.toastr.error(data.message, 'Opps!');\r\n    }\r\n  });\r\n}\r\n\r\nonCustomAction(event) {\r\n  console.log(event.data);\r\n  if (event.action === 'editrecord') {\r\n    this.SubjectCombination = event.data;\r\n    this.Buttontext = 'Update';\r\n    this.Headingtext = 'Update ';\r\n  }\r\n}\r\n\r\n// tslint:disable-next-line: member-ordering\r\nsettings = {\r\n  delete: {\r\n    confirmDelete: true,\r\n    deleteButtonContent: '<i class=\"fa fa-trash\"></i>',\r\n    saveButtonContent: 'save',\r\n    cancelButtonContent: 'cancel'\r\n  },\r\n\r\n  add: {\r\n    confirmCreate: true,\r\n  },\r\n\r\n  actions: {\r\n    add: false,\r\n    edit: false,\r\n    delete: true,\r\n    custom: [\r\n      { name: 'editrecord', title: '<i class=\"fa fa-edit\"></i>' },\r\n    ],\r\n\r\n\r\n  },\r\n\r\n  columns: {\r\n    // Id: {\r\n    //   title: 'Id',\r\n    // },\r\n    Name: {\r\n      title:  'Name',\r\n    },\r\n\r\n  },\r\n};\r\n\r\nonDeleteConfirm(event) {\r\n  this.SubjectCombination = event.data;\r\n    this.spinner.show();\r\n    this.subjectCombination.delsubjectCombination(this.SubjectCombination)\r\n    .subscribe(data => {\r\n      if  (data.success) {\r\n      this.spinner.hide();\r\n      this.toastr.success('successfully' +  'Deleted!', 'Success');\r\n      this.getsubjectCombination();\r\n      this.cleardata();\r\n      } else {\r\n        this.toastr.error(data.message, 'server error!!');\r\n      }\r\n    });\r\n}\r\n\r\nonCreateConfirm(event) {\r\n  console.log('Create Event In Console');\r\n  console.log(event);\r\n\r\n}\r\n\r\nonSaveConfirm(event) {\r\n  console.log('Edit Event In Console');\r\n  console.log(event);\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubjectCombinationComponent } from './subject-combination.component';\r\nimport { SubjectCombinationRoutingModule } from './subject-combination.routing.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { ModalSharedModule } from 'src/app/shared/modal/ModalShared.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SubjectCombinationRoutingModule,\r\n    SharedModule,\r\n    ModalSharedModule,\r\n    NgxSpinnerModule,\r\n    FormsModule,\r\n    Ng2SmartTableModule\r\n  ],\r\n  declarations: [SubjectCombinationComponent]\r\n})\r\nexport class SubjectCombinationModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { SubjectCombinationComponent } from './subject-combination.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SubjectCombinationComponent,\r\n        data: {\r\n            title: 'Subject Combination',\r\n            status: true\r\n        }\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class SubjectCombinationRoutingModule {\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        let modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        let modal: any = this.modals.filter(x => x.id === id)[0];\r\n        modal.close();\r\n    }\r\n}","export class SubjectCombination {\r\n  Id: Number;\r\n  Name: string;\r\n\r\n  constructor () {\r\n      this.Id = -1;\r\n  }\r\n}\r\n","import { ModalComponent } from \"./modal.component\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({\r\n    declarations: [ ModalComponent ],\r\n    exports: [ ModalComponent ]\r\n  })\r\n export class ModalSharedModule {}","﻿import { Component, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalService } from '../../service/modal.service';\r\n// https://jasonwatmore.com/post/2019/04/16/angular-7-custom-modal-window-dialog-box\r\n// https://github.com/cornflourblue/angular-7-custom-modal\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'jw-modal',\r\n    template:\r\n        `<div class=\"jw-modal\">\r\n            <div class=\"jw-modal-body\">\r\n                <ng-content></ng-content>\r\n            </div>\r\n        </div>\r\n        <div class=\"jw-modal-background\"></div>`\r\n})\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private modalService: ModalService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const modal = this;\r\n\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('modal must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', function (e: any) {\r\n            if (e.target.className === 'jw-modal') {\r\n                modal.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.modalService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.modalService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('jw-modal-open');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('jw-modal-open');\r\n    }\r\n}\r\n"],"sourceRoot":""}